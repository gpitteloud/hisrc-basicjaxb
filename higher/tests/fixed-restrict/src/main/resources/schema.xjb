<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<jaxb:bindings jaxb:version="3.0"
	xmlns:jaxb="https://jakarta.ee/xml/ns/jaxb"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
	jaxb:extensionBindingPrefixes="xjc"
>

	<!--  Global Bindings
		* JPA section 2.1, entities must be top-level classes.
		* JPA section 2.1, entities must implement the serializable interface.
		* When processing a Microsoft WCF service WSDL, it is recommended that the
		  generateElementProperty customization be set to 'false' in globalBindings.
		* Hint: Increase EnumMemberSizeCap above 256 with typesafeEnumMaxMembers="512".
	-->
	<jaxb:globalBindings localScoping="toplevel" generateIsSetMethod="true"
		fixedAttributeAsConstantProperty="false">
		<jaxb:serializable uid="20230301" />
		
		<!--
			Normally, the JAXB specification requires that a derivation-by-restriction
			be mapped to an inheritance between two Java classes. This is necessary
			to preserve the type hierarchy, but one of the down-sides is that the
			derived class does not really provide easy-to-use properties that reflect
			the restricted content model.

			This experimental <xjc:treatRestrictionLikeNewType> changes this behavior
			by not preserving the type inheritance to Java. Instead, it generates two
			unrelated Java classes, both with proper properties. 
		-->
		<!--
		<xjc:treatRestrictionLikeNewType />
		-->
	</jaxb:globalBindings>

    <jaxb:bindings schemaLocation="schema.xsd" node="/xs:schema">
    </jaxb:bindings>

</jaxb:bindings>
